{"version":3,"sources":["index.js"],"names":["Box","selectBox","props","row","col","className","this","boxClass","id","onClick","React","Component","Grid","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","key","style","Main","gridCopy","arrayClone","state","setState","seed","Math","floor","random","playButton","intervalId","setInterval","play","speed","g","g2","count","generation","Array","fill","map","arr","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"uPAIMA,G,iNACFC,UAAY,WACR,EAAKC,MAAMD,UAAU,EAAKC,MAAMC,IAAK,EAAKD,MAAME,M,wEAGhD,OACI,yBACIC,UAAWC,KAAKJ,MAAMK,SACtBC,GAAIF,KAAKJ,MAAMM,GACfC,QAASH,KAAKL,gB,GATZS,IAAMC,YAelBC,E,iLAQE,IANA,IAAMC,EAA2B,GAAlBP,KAAKJ,MAAMY,KACtBC,EAAU,GAEVR,EAAW,GAGPS,EAAG,EAAGA,EAAIV,KAAKJ,MAAMe,KAAMD,IAC/B,IAAI,IAAIE,EAAG,EAAGA,EAAIZ,KAAKJ,MAAMY,KAAMI,IAAI,CACnC,IAAIC,EAAQH,EAAI,IAAME,EAEtBX,EAAWD,KAAKJ,MAAMkB,SAASJ,GAAGE,GAAK,SAAW,UAClDH,EAAQM,KACJ,kBAACrB,EAAD,CACAO,SAAUA,EACVe,IAAKH,EACLA,MAAOA,EACPhB,IAAKa,EACLZ,IAAKc,EACLjB,UAAWK,KAAKJ,MAAMD,aAKlC,OACI,yBAAKI,UAAU,OAAOkB,MAAO,CAACV,MAAOA,IAC/BE,O,GA3BCL,IAAMC,WAgCnBa,E,YACF,aAAe,IAAD,8BACV,+CAWJvB,UAAY,SAACE,EAAKC,GACd,IAAIqB,EAAWC,EAAW,EAAKC,MAAMP,UACrCK,EAAStB,GAAKC,IAAQqB,EAAStB,GAAKC,GACpC,EAAKwB,SAAS,CACVR,SAAUK,KAhBJ,EAoBdI,KAAO,WAEH,IADA,IAAIJ,EAAWC,EAAW,EAAKC,MAAMP,UAC7BJ,EAAI,EAAGA,EAAI,EAAKC,KAAMD,IAC1B,IAAI,IAAIE,EAAI,EAAGA,EAAI,EAAKJ,KAAMI,IACW,IAAlCY,KAAKC,MAAsB,EAAhBD,KAAKE,YACfP,EAAST,GAAGE,IAAK,GAI7B,EAAKU,SAAS,CACVR,SAAUK,KA9BJ,EAkCdQ,WAAa,WACT,EAAKC,WAAaC,YAAY,EAAKC,KAAM,EAAKC,QAnCpC,EAsCdD,KAAO,WAIH,IAHA,IAAIE,EAAI,EAAKX,MAAMP,SACfmB,EAAKb,EAAW,EAAKC,MAAMP,UAEtBJ,EAAI,EAAGA,EAAI,EAAKC,KAAMD,IAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAKJ,KAAMI,IAAK,CAClC,IAAIsB,EAAQ,EACRxB,EAAI,GAAOsB,EAAEtB,EAAI,GAAGE,IAAIsB,IACxBxB,EAAI,GAAKE,EAAI,GAAOoB,EAAEtB,EAAI,GAAGE,EAAI,IAAIsB,IACrCxB,EAAI,GAAKE,EAAI,EAAKJ,KAAO,GAAOwB,EAAEtB,EAAI,GAAGE,EAAI,IAAIsB,IACjDtB,EAAI,EAAKJ,KAAO,GAAOwB,EAAEtB,GAAGE,EAAI,IAAIsB,IACpCtB,EAAI,GAAOoB,EAAEtB,GAAGE,EAAI,IAAIsB,IACxBxB,EAAI,EAAKC,KAAO,GAAOqB,EAAEtB,EAAI,GAAGE,IAAIsB,IACpCxB,EAAI,EAAKC,KAAO,GAAKC,EAAI,GAAOoB,EAAEtB,EAAI,GAAGE,EAAI,IAAIsB,IACjDxB,EAAI,EAAKC,KAAO,GAAKC,EAAI,EAAKJ,KAAO,GAAOwB,EAAEtB,EAAI,GAAGE,EAAI,IAAIsB,IAC7DF,EAAEtB,GAAGE,KAAOsB,EAAQ,GAAKA,EAAQ,KAAID,EAAGvB,GAAGE,IAAK,GAC/CoB,EAAEtB,GAAGE,IAAgB,IAAVsB,IAAaD,EAAGvB,GAAGE,IAAK,GAG5C,EAAKU,SAAS,CACVR,SAAUmB,EACVE,WAAY,EAAKd,MAAMc,WAAa,KAzD1C,EAAKJ,MAAQ,IACb,EAAKpB,KAAO,GACZ,EAAKH,KAAO,GAEZ,EAAKa,MAAQ,CACTc,WAAY,EACZrB,SAAUsB,MAAM,EAAKzB,MAAM0B,OAAOC,KAAI,kBAAMF,MAAM,EAAK5B,MAAM6B,MAAK,OAR5D,E,iFAgEVrC,KAAKuB,OACLvB,KAAK2B,e,+BAIL,OACI,6BACI,qDACA,kBAACrB,EAAD,CACAQ,SAAUd,KAAKqB,MAAMP,SACrBH,KAAMX,KAAKW,KACXH,KAAMR,KAAKQ,KACXb,UAAWK,KAAKL,YAEhB,4CAAkBK,KAAKqB,MAAMc,iB,GA/E1B/B,IAAMC,WAqFzB,SAASe,EAAWmB,GAChB,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGrCI,IAASC,OAAO,kBAAC1B,EAAD,MAAU2B,SAASC,eAAe,W","file":"static/js/main.b06d0f0f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Box extends React.Component {\n    selectBox = () => {\n        this.props.selectBox(this.props.row, this.props.col);\n    }\n    render() {\n        return(\n            <div \n                className={this.props.boxClass}\n                id={this.props.id}\n                onClick={this.selectBox}\n                />\n        );\n    }\n}\n\nclass Grid extends React.Component {\n    render(){\n        const width = (this.props.cols * 16) ;\n        var rowsArr = [];\n\n        var boxClass = \"\";\n\n        //redo this with react map\n        for(var i =0; i < this.props.rows; i++){\n            for(var j =0; j < this.props.cols; j++){\n                let boxId = i + \"_\" + j;\n\n                boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n                rowsArr.push(\n                    <Box\n                    boxClass={boxClass}\n                    key={boxId}\n                    boxId={boxId}\n                    row={i}\n                    col={j}\n                    selectBox={this.props.selectBox}\n                    />\n                );\n            }\n        }\n        return(\n            <div className=\"grid\" style={{width: width}}>\n                 {rowsArr}\n            </div>\n        )\n    }\n}\nclass Main extends React.Component {\n    constructor() {\n        super();\n        this.speed = 100;\n        this.rows = 30;\n        this.cols = 50;\n\n        this.state = {\n            generation: 0,\n            gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n        };\n    }\n\n    selectBox = (row, col) => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        gridCopy[row][col] = !gridCopy[row][col];\n        this.setState({\n            gridFull: gridCopy,\n        });\n    }\n\n    seed = () => {\n        let gridCopy = arrayClone(this.state.gridFull);\n        for(let i = 0; i < this.rows; i++) {\n            for(let j = 0; j < this.cols; j++){\n                if(Math.floor(Math.random() * 4) === 1) {\n                    gridCopy[i][j] = true;\n                }\n            }\n        }\n        this.setState({\n            gridFull: gridCopy,\n        });\n    }\n\n    playButton = () => {\n        this.intervalId = setInterval(this.play, this.speed);\n    }\n\n    play = () => {\n        let g = this.state.gridFull;\n        let g2 = arrayClone(this.state.gridFull);\n\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n              let count = 0;\n              if (i > 0) if (g[i - 1][j]) count++;\n              if (i > 0 && j > 0) if (g[i - 1][j - 1]) count++;\n              if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count++;\n              if (j < this.cols - 1) if (g[i][j + 1]) count++;\n              if (j > 0) if (g[i][j - 1]) count++;\n              if (i < this.rows - 1) if (g[i + 1][j]) count++;\n              if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count++;\n              if (i < this.rows - 1 && j < this.cols - 1) if (g[i + 1][j + 1]) count++;\n              if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n              if (!g[i][j] && count === 3) g2[i][j] = true;\n            }\n          }\n          this.setState({\n              gridFull: g2,\n              generation: this.state.generation + 1,\n          })\n    }\n\n    componentDidMount() {\n        this.seed();\n        this.playButton();\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>Conway's Game of Life</h1>\n                <Grid\n                gridFull={this.state.gridFull}\n                rows={this.rows}\n                cols={this.cols}\n                selectBox={this.selectBox}\n                />\n                <h2>Generations: {this.state.generation}</h2>\n            </div>\n        )\n    }\n}\n\nfunction arrayClone(arr) {\n    return JSON.parse(JSON.stringify(arr));\n}\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n"],"sourceRoot":""}